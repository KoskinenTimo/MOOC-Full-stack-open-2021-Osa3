{"version":3,"sources":["services/persons.js","components/Numbers.js","components/AddNewForm.js","components/PersonSearch.js","components/InfoBanner.js","App.js","index.js"],"names":["url","personsService","getAll","axios","get","then","res","data","catch","err","console","error","create","newPerson","post","update","id","put","destroy","delete","status","log","response","Numbers","persons","search","setpersons","setActionCompleted","deletePerson","actionCompleted","deletedPerson","window","confirm","name","filter","person","message","type","setTimeout","toLowerCase","includes","map","number","onClick","AddNewForm","newName","newNumber","handleInputChange","setNewName","setNewNumber","handleUpdate","oldPerson","handleCreate","concat","value","onChange","e","preventDefault","PersonSearch","searchName","InfoBanner","className","App","useState","setSearchName","useEffect","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6024ed8.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst url = '/api/persons';\r\n\r\n\r\nconst getAll = () => {  \r\n  return axios\r\n    .get(url)\r\n    .then(res => res.data)\r\n    .catch(err => {\r\n      console.error(err);\r\n      return [];\r\n    });\r\n}\r\n\r\nconst create = (newPerson) => {\r\n  return axios\r\n    .post(url,newPerson)\r\n    .then(res => res.data)\r\n    .catch(err => {\r\n      console.error(err);\r\n      return null\r\n    })\r\n}\r\n\r\nconst update = (id,newPerson) => {\r\n  return axios\r\n    .put(`${url}/${id}`,newPerson)\r\n    .then(res => res.data)\r\n    .catch(err => {\r\n      console.error(err);\r\n      return null\r\n    })\r\n}\r\n\r\nconst destroy = id => {\r\n  return axios\r\n    .delete(`${url}/${id}`)\r\n    .then(res => res.status)\r\n    .catch(err => {\r\n      console.log(err.status);\r\n      return err.response.status;\r\n    })\r\n}\r\n\r\nconst personsService = {\r\n  getAll,\r\n  create,\r\n  update,\r\n  destroy\r\n}\r\n\r\nexport default personsService;\r\n\r\n","import React from 'react';\r\n\r\n// Data service\r\nimport personsService from '../services/persons';\r\n\r\n\r\nconst Numbers = ({ persons,search,setpersons,setActionCompleted,actionCompleted }) => {\r\n\r\n  const renderpersons = () => {\r\n      return persons.filter(person => person.name.toLowerCase().includes(search.toLowerCase()))\r\n      .map(person => \r\n        <tr key={person.id}>\r\n          <td>{person.name}</td>\r\n          <td>{person.number}</td>\r\n          <td><button onClick={() => deletePerson(person)}>Delete</button></td>\r\n        </tr>\r\n      )\r\n  }\r\n\r\n  const deletePerson = (deletedPerson) => {\r\n    if (window.confirm(`Delete ${deletedPerson.name}?`)) {\r\n      personsService\r\n        .destroy(deletedPerson.id)\r\n        .then(res => {\r\n          if (res === 204) {\r\n            setpersons(persons.filter(person => person.id !== deletedPerson.id))\r\n            setActionCompleted({\r\n              message:`${deletedPerson.name} deleted.`,\r\n              type:\"valid\"\r\n            })\r\n            setTimeout(() => {\r\n              setActionCompleted(null);\r\n            },4000)\r\n          } else if (res === 404) {\r\n            setActionCompleted({\r\n              message:`${deletedPerson.name} has been deleted already.`,\r\n              type:\"error\"\r\n            })\r\n            setTimeout(() => {\r\n              setActionCompleted(null);\r\n            },4000)\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Numbers</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Number</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {renderpersons()}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Numbers;","import React from 'react';\r\n\r\n// Data service\r\nimport personsService from '../services/persons';\r\n\r\n\r\nconst AddNewForm = ({ newName,newNumber,handleInputChange,persons,setpersons,setNewName,setNewNumber,setActionCompleted }) => {\r\n\r\n  const handleAddPerson = (e) => {\r\n    e.preventDefault();\r\n    const oldPerson = persons.filter(person => person.name === newName)[0];\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n\r\n    if (oldPerson) {\r\n      if (window.confirm(`${oldPerson.name} already exists. Do you want to replace the old number?`)) {\r\n        handleUpdate(oldPerson,newPerson);\r\n      }    \r\n    } else {        \r\n      handleCreate(newPerson);\r\n    }\r\n  }\r\n\r\n  const handleUpdate = (oldPerson,newPerson) => {\r\n    personsService\r\n    .update(oldPerson.id,newPerson)\r\n    .then(res => {\r\n      if (res) {\r\n        setpersons(persons.map(person => person.id !== res.id ? person : res))\r\n        setNewName('');\r\n        setNewNumber('');            \r\n        setActionCompleted({\r\n          message:`${newPerson.name} updated.`,\r\n          type:\"valid\"\r\n        })\r\n        setTimeout(() => {\r\n          setActionCompleted(null);\r\n        },4000)\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleCreate = (newPerson) => {\r\n    personsService\r\n    .create(newPerson)\r\n    .then(person => {\r\n      if(person) {\r\n        setpersons(persons.concat(person))\r\n        setNewName('');\r\n        setNewNumber('');\r\n        setActionCompleted({\r\n          message:`${newPerson.name} added.`,\r\n          type:\"valid\"\r\n        })\r\n        setTimeout(() => {\r\n          setActionCompleted(null);\r\n        },4000)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Add new</h2>\r\n      <form>\r\n        <div>\r\n          Name: <input name=\"name\" value={newName} onChange={handleInputChange} />          \r\n        </div>\r\n        <div>\r\n          Number: <input name=\"number\" value={newNumber} onChange={handleInputChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" onClick={handleAddPerson}>Add</button>\r\n        </div>\r\n      </form> \r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddNewForm;","import React from 'react';\r\n\r\n\r\nconst PersonSearch = ({ searchName,handleInputChange }) => {\r\n  return (\r\n    <>\r\n      <h2>Phonebook</h2>\r\n      <div>\r\n        Search: <input name=\"search\" value={searchName} onChange={handleInputChange} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PersonSearch;","import React from 'react';\r\n\r\nconst InfoBanner = ({ actionCompleted }) => {\r\n  if (actionCompleted) {\r\n    return (\r\n      <div className={actionCompleted.type}>\r\n        <h3>{actionCompleted.message}</h3>\r\n      </div>\r\n    )\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default InfoBanner;","import React, { useState,useEffect } from 'react'\n\n// Data service\nimport personsService from './services/persons';\n\n// Components\nimport Numbers from './components/Numbers';\nimport AddNewForm from './components/AddNewForm';\nimport PersonSearch from './components/PersonSearch';\nimport InfoBanner from './components/InfoBanner';\n\n\nconst App = () => {\n  const [ persons, setpersons] = useState([]) \n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ searchName, setSearchName ] = useState('');\n  const [ actionCompleted, setActionCompleted ] = useState(null);\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(res => {\n        setpersons(res)\n      })\n  }, [])\n  \n  const handleInputChange = ({ target }) => {\n    if(target.name === \"name\") {\n      setNewName(target.value)\n    } else if (target.name === \"number\") {\n      setNewNumber(target.value)\n    } else if (target.name === \"search\") {\n      setSearchName(target.value);\n    }\n  }\n\n  return (\n    <div>\n      <InfoBanner \n        actionCompleted={actionCompleted}\n      />\n      <PersonSearch \n        searchName={searchName}\n        handleInputChange={handleInputChange}\n      />\n      <AddNewForm \n        newName={newName}\n        persons={persons}\n        handleInputChange={handleInputChange}\n        newNumber={newNumber}\n        setpersons={setpersons}\n        setNewNumber={setNewNumber}\n        setNewName={setNewName}\n        setActionCompleted={setActionCompleted}\n        actionCompleted={actionCompleted}    \n      />     \n      <Numbers \n        persons={persons} \n        search={searchName}\n        setpersons={setpersons}   \n        setActionCompleted={setActionCompleted} \n        actionCompleted={actionCompleted}       \n      />\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.css';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}